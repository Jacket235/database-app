{"ast":null,"code":"var _jsxFileName = \"X:\\\\Other\\\\Coding\\\\React\\\\database-app\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport userLogIn from \"../functions/userLogIn\";\nimport userLogOut from \"../functions/userLogOut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport default function AuthProvider(props) {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = async (email, password) => {\n    const res = await userLogIn(email, password);\n    if (res) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n  const logout = async email => {\n    await userLogOut(email);\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","userLogIn","userLogOut","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","props","_s","isLoggedIn","setIsLoggedIn","login","email","password","res","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["X:/Other/Coding/React/database-app/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport userLogIn from \"../functions/userLogIn\";\r\nimport userLogOut from \"../functions/userLogOut\";\r\n\r\ninterface AuthContextType {\r\n    isLoggedIn: boolean;\r\n    login: (email: string, password: string) => Promise<void>;\r\n    logout: (email: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport default function AuthProvider(props: AuthContextType) {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const login = async (email: string, password: string) => {\r\n        const res = await userLogIn(email, password);\r\n        if (res) {\r\n            setIsLoggedIn(true);\r\n        } else {\r\n            setIsLoggedIn(false);\r\n        }\r\n    }\r\n\r\n    const logout = async (email: string) => {\r\n        await userLogOut(email);\r\n        setIsLoggedIn(false)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isLoggedIn, login, logout }} />\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjD,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,eAAe,SAASC,YAAYA,CAACC,KAAsB,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACrD,MAAMC,GAAG,GAAG,MAAMd,SAAS,CAACY,KAAK,EAAEC,QAAQ,CAAC;IAC5C,IAAIC,GAAG,EAAE;MACLJ,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACHA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAMK,MAAM,GAAG,MAAOH,KAAa,IAAK;IACpC,MAAMX,UAAU,CAACW,KAAK,CAAC;IACvBF,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAER,UAAU;MAAEE,KAAK;MAAEI;IAAO;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEtE;AAACb,EAAA,CApBuBF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}