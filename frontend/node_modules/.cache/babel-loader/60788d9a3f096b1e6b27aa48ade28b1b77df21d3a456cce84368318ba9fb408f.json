{"ast":null,"code":"var _jsxFileName = \"X:\\\\Other\\\\Coding\\\\React\\\\database-app\\\\frontend\\\\src\\\\components\\\\ManageTimelineModal.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport modifyEvents from \"../functions/modifyEvents\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ManageTimelineModal({\n  show,\n  onClose,\n  events,\n  setEvents,\n  connections,\n  setConnections\n}) {\n  _s();\n  var _selectedEvent$id;\n  const [activeTab, setActiveTab] = useState(\"events\");\n  const [selectedStep, setSelectedStep] = useState(-1);\n  const [selectedEvent, setSelectedEvent] = useState();\n  const [tempEvents, setTempEvents] = useState(events);\n  const [draggedEventId, setDraggedEventId] = useState(null);\n  const {\n    accessToken\n  } = useAuth();\n  if (!show) return null;\n  function checkForEventMods(original, updated) {\n    const originalMap = new Map(original.map(e => [e.id, e]));\n    const updatedMap = new Map(updated.map(e => [e.id, e]));\n    const added = [];\n    const modified = [];\n    const removed = [];\n\n    // Check added & modified\n    for (const updatedEvent of updated) {\n      const originalEvent = originalMap.get(updatedEvent.id);\n      if (!originalEvent) {\n        added.push(updatedEvent); // new event\n      } else if (updatedEvent.name !== originalEvent.name || updatedEvent.step_id !== originalEvent.step_id || updatedEvent.position !== originalEvent.position) {\n        modified.push(updatedEvent); // changed event\n      }\n    }\n\n    // Check removed\n    for (const originalEvent of original) {\n      if (!updatedMap.has(originalEvent.id)) {\n        removed.push(originalEvent);\n      }\n    }\n    return {\n      added,\n      modified,\n      removed\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal d-block\",\n    tabIndex: -1,\n    style: {\n      backgroundColor: 'rgba(0,0,0,0.5)'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"modal-title\",\n            children: \"Manage your timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-close\",\n            onClick: () => onClose()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav nav-tabs mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-link ${activeTab === \"events\" ? \"active\" : \"\"}`,\n                onClick: () => setActiveTab(\"events\"),\n                children: \"Modify Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-link ${activeTab === \"connections\" ? \"active\" : \"\"}`,\n                onClick: () => setActiveTab(\"connections\"),\n                children: \"Modify Connections\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), activeTab === \"events\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: selectedStep !== null && selectedStep !== void 0 ? selectedStep : -1,\n                onChange: e => setSelectedStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"-1\",\n                  children: \"Step\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this), [0, 1, 2, 3].map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i,\n                  children: i + 1\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select the step to modify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), selectedStep !== -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 d-flex flex-column\",\n              children: selectedStep !== -1 && tempEvents.filter(e => e.step_id === selectedStep).sort((a, b) => a.position - b.position).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded p-1 my-1 d-flex justify-content-between align-items-center\",\n                draggable: true,\n                style: {\n                  cursor: \"move\"\n                },\n                onDragStart: () => setDraggedEventId(event.id),\n                onDragOver: e => e.preventDefault(),\n                onDrop: () => {\n                  if (draggedEventId === null || draggedEventId === event.id) return;\n                  const draggedIndex = tempEvents.findIndex(e => e.id === draggedEventId);\n                  const dropIndex = tempEvents.findIndex(e => e.id === event.id);\n                  const updated = [...tempEvents];\n                  const [movedItem] = updated.splice(draggedIndex, 1);\n                  updated.splice(dropIndex, 0, movedItem);\n                  const stepEvents = updated.filter(e => e.step_id === selectedStep);\n                  const otherEvents = updated.filter(e => e.step_id !== selectedStep);\n                  const reordered = stepEvents.map((e, i) => ({\n                    ...e,\n                    position: i\n                  }));\n                  setTempEvents([...otherEvents, ...reordered]);\n                },\n                children: [event.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => {\n                    const updated = tempEvents.filter(e => e.id !== event.id);\n                    const stepEvents = updated.filter(e => e.step_id === selectedStep);\n                    const otherEvents = updated.filter(e => e.step_id !== selectedStep);\n                    const reordered = stepEvents.map((e, i) => ({\n                      ...e,\n                      position: i\n                    }));\n                    setTempEvents([...otherEvents, ...reordered]);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 53\n                }, this)]\n              }, event.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-1\",\n              children: selectedStep !== -1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: () => {\n                  if (selectedStep == null) return;\n                  const stepEvents = tempEvents.filter(e => e.step_id === selectedStep);\n                  const newEvent = {\n                    id: -Date.now(),\n                    name: \"New Event\",\n                    step_id: selectedStep,\n                    position: stepEvents.length\n                  };\n                  setTempEvents([...tempEvents, newEvent]);\n                },\n                children: \"Add Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), activeTab === \"connections\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: (_selectedEvent$id = selectedEvent === null || selectedEvent === void 0 ? void 0 : selectedEvent.id) !== null && _selectedEvent$id !== void 0 ? _selectedEvent$id : -1,\n                onChange: e => {\n                  const id = Number(e.target.value);\n                  const selected = tempEvents.find(eve => eve.id === id);\n                  setSelectedEvent(selected);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"-1\",\n                  children: \"Select event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 41\n                }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: event.id,\n                  children: event.name\n                }, event.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select an event in your timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 d-flex flex-column\",\n              children: tempEvents.filter(e => e.step_id > selectedEvent.step_id).map(event => {\n                const isConnected = connections.some(conn => conn.from_event_id === selectedEvent.id && conn.to_event_id === event.id);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"border rounded p-1 my-1 d-flex justify-content-between align-items-center\",\n                  children: [event.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `btn ${isConnected ? \"btn-outline-danger\" : \"btn-outline-primary\"}`,\n                    onClick: () => {\n                      if (isConnected) {\n                        setConnections(prev => prev.filter(conn => !(conn.from_event_id === selectedEvent.id && conn.to_event_id === event.id)));\n                      } else {\n                        setConnections(prev => [...prev, {\n                          from_event_id: selectedEvent.id,\n                          to_event_id: event.id\n                        }]);\n                      }\n                    },\n                    children: isConnected ? \"Disconnect\" : \"Connect\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 57\n                  }, this)]\n                }, event.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => {\n              const {\n                added,\n                modified,\n                removed\n              } = checkForEventMods(events, tempEvents);\n              modifyEvents(accessToken, added, modified, removed);\n              setEvents(tempEvents);\n              onClose();\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => onClose(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(ManageTimelineModal, \"il9UtNz9rsc1JQ342PbnW4j11R4=\", false, function () {\n  return [useAuth];\n});\n_c = ManageTimelineModal;\nvar _c;\n$RefreshReg$(_c, \"ManageTimelineModal\");","map":{"version":3,"names":["useState","modifyEvents","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ManageTimelineModal","show","onClose","events","setEvents","connections","setConnections","_s","_selectedEvent$id","activeTab","setActiveTab","selectedStep","setSelectedStep","selectedEvent","setSelectedEvent","tempEvents","setTempEvents","draggedEventId","setDraggedEventId","accessToken","checkForEventMods","original","updated","originalMap","Map","map","e","id","updatedMap","added","modified","removed","updatedEvent","originalEvent","get","push","name","step_id","position","has","className","tabIndex","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","Number","target","i","filter","sort","a","b","event","draggable","cursor","onDragStart","onDragOver","preventDefault","onDrop","draggedIndex","findIndex","dropIndex","movedItem","splice","stepEvents","otherEvents","reordered","newEvent","Date","now","length","selected","find","eve","isConnected","some","conn","from_event_id","to_event_id","prev","_c","$RefreshReg$"],"sources":["X:/Other/Coding/React/database-app/frontend/src/components/ManageTimelineModal.tsx"],"sourcesContent":["import { SetStateAction, Dispatch, useState } from \"react\";\r\nimport modifyEvents from \"../functions/modifyEvents\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\ninterface Event {\r\n    id: number;\r\n    name: string;\r\n    step_id: number;\r\n    position: number;\r\n}\r\n\r\ninterface Connection {\r\n    from_event_id: number,       // Event ID from\r\n    to_event_id: number          // Event ID to\r\n}\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    onClose: () => void;\r\n    events: Event[];\r\n    setEvents: Dispatch<SetStateAction<Event[]>>;\r\n    connections: Connection[];\r\n    setConnections: Dispatch<SetStateAction<Connection[]>>;\r\n}\r\n\r\nexport default function ManageTimelineModal({ show, onClose, events, setEvents, connections, setConnections }: Props) {\r\n    const [activeTab, setActiveTab] = useState<\"events\" | \"connections\">(\"events\");\r\n    const [selectedStep, setSelectedStep] = useState<number>(-1);\r\n    const [selectedEvent, setSelectedEvent] = useState<Event>();\r\n    const [tempEvents, setTempEvents] = useState(events);\r\n    const [draggedEventId, setDraggedEventId] = useState<number | null>(null);\r\n    const { accessToken } = useAuth();\r\n\r\n    if (!show) return null;\r\n\r\n    interface EventChanges {\r\n        added: Event[];\r\n        modified: Event[];\r\n        removed: Event[];\r\n    }\r\n\r\n    function checkForEventMods(original: Event[], updated: Event[]): EventChanges {\r\n        const originalMap = new Map(original.map(e => [e.id, e]));\r\n        const updatedMap = new Map(updated.map(e => [e.id, e]));\r\n\r\n        const added: Event[] = [];\r\n        const modified: Event[] = [];\r\n        const removed: Event[] = [];\r\n\r\n        // Check added & modified\r\n        for (const updatedEvent of updated) {\r\n            const originalEvent = originalMap.get(updatedEvent.id);\r\n            if (!originalEvent) {\r\n                added.push(updatedEvent); // new event\r\n            } else if (\r\n                updatedEvent.name !== originalEvent.name ||\r\n                updatedEvent.step_id !== originalEvent.step_id ||\r\n                updatedEvent.position !== originalEvent.position\r\n            ) {\r\n                modified.push(updatedEvent); // changed event\r\n            }\r\n        }\r\n\r\n        // Check removed\r\n        for (const originalEvent of original) {\r\n            if (!updatedMap.has(originalEvent.id)) {\r\n                removed.push(originalEvent);\r\n            }\r\n        }\r\n\r\n        return { added, modified, removed };\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal d-block\" tabIndex={-1} style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Manage your timeline</h5>\r\n                        <button className=\"btn-close\" onClick={() => onClose()}></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <ul className=\"nav nav-tabs mb-3\">\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"events\" ? \"active\" : \"\"}`}\r\n                                    onClick={() => setActiveTab(\"events\")}\r\n                                >\r\n                                    Modify Events\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"connections\" ? \"active\" : \"\"}`}\r\n                                    onClick={() => setActiveTab(\"connections\")}\r\n                                >\r\n                                    Modify Connections\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {activeTab === \"events\" && (\r\n                            <>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <select className=\"form-select\" value={selectedStep ?? -1} onChange={(e) => setSelectedStep(Number(e.target.value))}>\r\n                                        <option value=\"-1\">Step</option>\r\n                                        {[0, 1, 2, 3].map(i => (\r\n                                            <option key={i} value={i}>{i + 1}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <label>Select the step to modify</label>\r\n                                </div>\r\n                                {selectedStep !== -1 && (\r\n                                    <div className=\"mb-3 d-flex flex-column\">\r\n                                        {selectedStep !== -1 && tempEvents\r\n                                            .filter(e => e.step_id === selectedStep)\r\n                                            .sort((a, b) => a.position - b.position)\r\n                                            .map(event => (\r\n                                                <div\r\n                                                    key={event.id}\r\n                                                    className=\"border rounded p-1 my-1 d-flex justify-content-between align-items-center\"\r\n                                                    draggable\r\n                                                    style={{ cursor: \"move\" }}\r\n                                                    onDragStart={() => setDraggedEventId(event.id)}\r\n                                                    onDragOver={e => e.preventDefault()}\r\n                                                    onDrop={() => {\r\n                                                        if (draggedEventId === null || draggedEventId === event.id) return;\r\n\r\n                                                        const draggedIndex = tempEvents.findIndex(e => e.id === draggedEventId);\r\n                                                        const dropIndex = tempEvents.findIndex(e => e.id === event.id);\r\n                                                        const updated = [...tempEvents];\r\n                                                        const [movedItem] = updated.splice(draggedIndex, 1);\r\n                                                        updated.splice(dropIndex, 0, movedItem);\r\n\r\n                                                        const stepEvents = updated.filter(e => e.step_id === selectedStep);\r\n                                                        const otherEvents = updated.filter(e => e.step_id !== selectedStep);\r\n                                                        const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\r\n\r\n                                                        setTempEvents([...otherEvents, ...reordered]);\r\n                                                    }}\r\n                                                >\r\n                                                    {event.name}\r\n                                                    <button\r\n                                                        className=\"btn btn-danger\"\r\n                                                        onClick={() => {\r\n                                                            const updated = tempEvents.filter(e => e.id !== event.id);\r\n                                                            const stepEvents = updated.filter(e => e.step_id === selectedStep);\r\n                                                            const otherEvents = updated.filter(e => e.step_id !== selectedStep);\r\n                                                            const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\r\n                                                            setTempEvents([...otherEvents, ...reordered]);\r\n                                                        }}>\r\n                                                        Remove\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"mb-1\">\r\n                                    {selectedStep !== -1 && (\r\n                                        <button className=\"btn btn-success\" onClick={() => {\r\n                                            if (selectedStep == null) return;\r\n\r\n                                            const stepEvents = tempEvents.filter(e => e.step_id === selectedStep);\r\n                                            const newEvent = {\r\n                                                id: -Date.now(),\r\n                                                name: \"New Event\",\r\n                                                step_id: selectedStep,\r\n                                                position: stepEvents.length\r\n                                            };\r\n                                            setTempEvents([...tempEvents, newEvent]);\r\n                                        }}>\r\n                                            Add Event\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        {activeTab === \"connections\" && (\r\n                            <>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <select className=\"form-select\" value={selectedEvent?.id ?? -1} onChange={e => {\r\n                                        const id = Number(e.target.value);\r\n                                        const selected = tempEvents.find(eve => eve.id === id)\r\n                                        setSelectedEvent(selected);\r\n                                    }}>\r\n                                        <option value=\"-1\">Select event</option>\r\n                                        {events.map(event => (\r\n                                            <option key={event.id} value={event.id}>{event.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <label>Select an event in your timeline</label>\r\n                                </div>\r\n                                {selectedEvent && (\r\n                                    <div className=\"mb-3 d-flex flex-column\">\r\n                                        {tempEvents\r\n                                            .filter(e => e.step_id > selectedEvent.step_id)\r\n                                            .map(event => {\r\n                                                const isConnected = connections.some(conn =>\r\n                                                    conn.from_event_id === selectedEvent.id &&\r\n                                                    conn.to_event_id === event.id\r\n                                                );\r\n\r\n                                                return (\r\n                                                    <div\r\n                                                        key={event.id}\r\n                                                        className=\"border rounded p-1 my-1 d-flex justify-content-between align-items-center\"\r\n                                                    >\r\n                                                        {event.name}\r\n                                                        <button\r\n                                                            className={`btn ${isConnected ? \"btn-outline-danger\" : \"btn-outline-primary\"}`}\r\n                                                            onClick={() => {\r\n                                                                if (isConnected) {\r\n                                                                    setConnections(prev =>\r\n                                                                        prev.filter(conn => !(\r\n                                                                            conn.from_event_id === selectedEvent.id &&\r\n                                                                            conn.to_event_id === event.id\r\n                                                                        ))\r\n                                                                    );\r\n                                                                } else {\r\n                                                                    setConnections(prev => [\r\n                                                                        ...prev,\r\n                                                                        {\r\n                                                                            from_event_id: selectedEvent.id,\r\n                                                                            to_event_id: event.id,\r\n                                                                        },\r\n                                                                    ]);\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                            {isConnected ? \"Disconnect\" : \"Connect\"}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                    </div>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            className=\"btn btn-primary\" onClick={() => {\r\n                                const { added, modified, removed } = checkForEventMods(events, tempEvents);\r\n                                modifyEvents(accessToken, added, modified, removed);\r\n\r\n                                setEvents(tempEvents);\r\n                                onClose()\r\n                            }}>\r\n                            Save\r\n                        </button>\r\n                        <button className=\"btn btn-danger\" onClick={() => onClose()}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}