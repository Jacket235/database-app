{"ast":null,"code":"import _objectSpread from\"X:/Other/Coding/React/database-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// import React from 'react';\n// import { useEffect, useState, SetStateAction, Dispatch } from 'react';\n// interface Event {\n//     id: number;\n//     name: string;\n//     step_id: number;\n//     position: number;\n// }\n// interface Props {\n//     show: boolean;\n//     onClose: () => void;\n//     events: Event[];\n//     setEvents: Dispatch<SetStateAction<Event[]>>;\n//     selectedStep: number | null;\n//     setSelectedStep: Dispatch<SetStateAction<number | null>>;\n// }\n// export default function ManageEventsModal({\n//     show,\n//     onClose,\n//     events,\n//     setEvents,\n//     selectedStep,\n//     setSelectedStep\n// }: Props) {\n//     const [tempEvents, setTempEvents] = useState(events);\n//     const [draggedEventId, setDraggedEventId] = useState<number | null>(null);\n//     useEffect(() => {\n//         if (show) setTempEvents(events);\n//     }, [show, events]);\n//     if (!show) return null;\n//     return (\n//         <div className=\"modal d-block\" tabIndex={-1} style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n//             <div className=\"modal-dialog\">\n//                 <div className=\"modal-content\">\n//                     <div className=\"modal-header\">\n//                         <h5 className=\"modal-title\">Manage your timeline</h5>\n//                         <button className=\"btn-close\" onClick={onClose}></button>\n//                     </div>\n//                     <div className=\"modal-body\">\n//                         <div className=\"mb-3 d-flex flex-column\">\n//                             <div className=\"form-floating\">\n//                                 <select className=\"form-select\" value={selectedStep ?? ''} onChange={(e) => setSelectedStep(Number(e.target.value))}>\n//                                     <option defaultValue=\"\">Step</option>\n//                                     {[0, 1, 2, 3].map(i => (\n//                                         <option key={i} value={i}>{i + 1}</option>\n//                                     ))}\n//                                 </select>\n//                                 <label>Select the step to modify</label>\n//                             </div>\n//                         </div>\n//                         <div className=\"mb-3 d-flex flex-column\">\n//                             {selectedStep !== null && tempEvents\n//                                 .filter(e => e.step_id === selectedStep)\n//                                 .sort((a, b) => a.position - b.position)\n//                                 .map(event => (\n//                                     <div\n//                                         key={event.id}\n//                                         className=\"border rounded p-1 my-1 d-flex justify-content-between align-items-center\"\n//                                         draggable\n//                                         style={{ cursor: \"move\" }}\n//                                         onDragStart={() => setDraggedEventId(event.id)}\n//                                         onDragOver={e => e.preventDefault()}\n//                                         onDrop={() => {\n//                                             if (draggedEventId === null || draggedEventId === event.id) return;\n//                                             const draggedIndex = tempEvents.findIndex(e => e.id === draggedEventId);\n//                                             const dropIndex = tempEvents.findIndex(e => e.id === event.id);\n//                                             const updated = [...tempEvents];\n//                                             const [movedItem] = updated.splice(draggedIndex, 1);\n//                                             updated.splice(dropIndex, 0, movedItem);\n//                                             const stepEvents = updated.filter(e => e.step_id === selectedStep);\n//                                             const otherEvents = updated.filter(e => e.step_id !== selectedStep);\n//                                             const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\n//                                             setTempEvents([...otherEvents, ...reordered]);\n//                                         }}\n//                                     >\n//                                         <span>{event.name}</span>\n//                                         <button\n//                                             className=\"btn btn-danger\"\n//                                             onClick={() => {\n//                                                 const updated = tempEvents.filter(e => e.id !== event.id);\n//                                                 const stepEvents = updated.filter(e => e.step_id === selectedStep);\n//                                                 const otherEvents = updated.filter(e => e.step_id !== selectedStep);\n//                                                 const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\n//                                                 setTempEvents([...otherEvents, ...reordered]);\n//                                             }}\n//                                         >\n//                                             Remove\n//                                         </button>\n//                                     </div>\n//                                 ))}\n//                         </div>\n//                         {selectedStep !== null && (\n//                             <div className=\"mb-1\">\n//                                 <button\n//                                     className=\"btn btn-success\"\n//                                     onClick={() => {\n//                                         const stepEvents = tempEvents.filter(e => e.step_id === selectedStep);\n//                                         const newEvent = {\n//                                             id: -Date.now(),\n//                                             name: \"New Event\",\n//                                             step_id: selectedStep,\n//                                             position: stepEvents.length\n//                                         };\n//                                         setTempEvents([...tempEvents, newEvent]);\n//                                     }}\n//                                 >\n//                                     Add event\n//                                 </button>\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div className=\"modal-footer\">\n//                         <button\n//                             className=\"btn btn-primary\"\n//                             onClick={() => {\n//                                 setEvents(tempEvents);\n//                                 onClose();\n//                             }}>\n//                             Save\n//                         </button>\n//                         <button className=\"btn btn-danger\" onClick={onClose}>\n//                             Cancel\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\nimport{useState}from\"react\";import modifyEvents from\"../functions/modifyEvents\";import{useAuth}from\"../context/AuthContext\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function ManageTimelineModal(_ref){let{show,onClose,events,setEvents}=_ref;const[activeTab,setActiveTab]=useState(\"events\");const[selectedStep,setSelectedStep]=useState(-1);const[tempEvents,setTempEvents]=useState(events);const[draggedEventId,setDraggedEventId]=useState(null);const{accessToken}=useAuth();if(!show)return null;function checkForEventMods(original,updated){const originalMap=new Map(original.map(e=>[e.id,e]));const updatedMap=new Map(updated.map(e=>[e.id,e]));const added=[];const modified=[];const removed=[];// Check added & modified\nfor(const updatedEvent of updated){const originalEvent=originalMap.get(updatedEvent.id);if(!originalEvent){added.push(updatedEvent);// new event\n}else if(updatedEvent.name!==originalEvent.name||updatedEvent.step_id!==originalEvent.step_id||updatedEvent.position!==originalEvent.position){modified.push(updatedEvent);// changed event\n}}// Check removed\nfor(const originalEvent of original){if(!updatedMap.has(originalEvent.id)){removed.push(originalEvent);}}return{added,modified,removed};}return/*#__PURE__*/_jsx(\"div\",{className:\"modal d-block\",tabIndex:-1,style:{backgroundColor:'rgba(0,0,0,0.5)'},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title\",children:\"Manage your timeline\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-close\",onClick:()=>onClose()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs mb-3\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab===\"events\"?\"active\":\"\"),onClick:()=>setActiveTab(\"events\"),children:\"Modify Events\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab===\"connections\"?\"active\":\"\"),onClick:()=>setActiveTab(\"connections\"),children:\"Modify Connections\"})})]}),activeTab===\"events\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating mb-3\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:selectedStep!==null&&selectedStep!==void 0?selectedStep:-1,onChange:e=>setSelectedStep(Number(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:\"-1\",children:\"Step\"}),[0,1,2,3].map(i=>/*#__PURE__*/_jsx(\"option\",{value:i,children:i+1},i))]}),/*#__PURE__*/_jsx(\"label\",{children:\"Select the step to modify\"})]}),selectedStep!==-1&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 d-flex flex-column\",children:selectedStep!==-1&&tempEvents.filter(e=>e.step_id===selectedStep).sort((a,b)=>a.position-b.position).map(event=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded p-1 my-1 d-flex justify-content-between align-items-center\",draggable:true,style:{cursor:\"move\"},onDragStart:()=>setDraggedEventId(event.id),onDragOver:e=>e.preventDefault(),onDrop:()=>{if(draggedEventId===null||draggedEventId===event.id)return;const draggedIndex=tempEvents.findIndex(e=>e.id===draggedEventId);const dropIndex=tempEvents.findIndex(e=>e.id===event.id);const updated=[...tempEvents];const[movedItem]=updated.splice(draggedIndex,1);updated.splice(dropIndex,0,movedItem);const stepEvents=updated.filter(e=>e.step_id===selectedStep);const otherEvents=updated.filter(e=>e.step_id!==selectedStep);const reordered=stepEvents.map((e,i)=>_objectSpread(_objectSpread({},e),{},{position:i}));setTempEvents([...otherEvents,...reordered]);},children:[event.name,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>{const updated=tempEvents.filter(e=>e.id!==event.id);const stepEvents=updated.filter(e=>e.step_id===selectedStep);const otherEvents=updated.filter(e=>e.step_id!==selectedStep);const reordered=stepEvents.map((e,i)=>_objectSpread(_objectSpread({},e),{},{position:i}));setTempEvents([...otherEvents,...reordered]);},children:\"Remove\"})]},event.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-1\",children:selectedStep!==-1&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:()=>{if(selectedStep==null)return;const stepEvents=tempEvents.filter(e=>e.step_id===selectedStep);const newEvent={id:-Date.now(),name:\"New Event\",step_id:selectedStep,position:stepEvents.length};setTempEvents([...tempEvents,newEvent]);},children:\"Add Event\"})})]}),activeTab===\"connections\"&&/*#__PURE__*/_jsx(\"div\",{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>{const{added,modified,removed}=checkForEventMods(events,tempEvents);modifyEvents(accessToken,added,modified,removed);setEvents(tempEvents);onClose();},children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>onClose(),children:\"Cancel\"})]})]})})});}","map":{"version":3,"names":["useState","modifyEvents","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ManageTimelineModal","_ref","show","onClose","events","setEvents","activeTab","setActiveTab","selectedStep","setSelectedStep","tempEvents","setTempEvents","draggedEventId","setDraggedEventId","accessToken","checkForEventMods","original","updated","originalMap","Map","map","e","id","updatedMap","added","modified","removed","updatedEvent","originalEvent","get","push","name","step_id","position","has","className","tabIndex","style","backgroundColor","children","onClick","concat","value","onChange","Number","target","i","filter","sort","a","b","event","draggable","cursor","onDragStart","onDragOver","preventDefault","onDrop","draggedIndex","findIndex","dropIndex","movedItem","splice","stepEvents","otherEvents","reordered","_objectSpread","newEvent","Date","now","length"],"sources":["X:/Other/Coding/React/database-app/frontend/src/components/ManageTimelineModal.tsx"],"sourcesContent":["// import React from 'react';\r\n\r\n// import { useEffect, useState, SetStateAction, Dispatch } from 'react';\r\n\r\n// interface Event {\r\n//     id: number;\r\n//     name: string;\r\n//     step_id: number;\r\n//     position: number;\r\n// }\r\n\r\n// interface Props {\r\n//     show: boolean;\r\n//     onClose: () => void;\r\n//     events: Event[];\r\n//     setEvents: Dispatch<SetStateAction<Event[]>>;\r\n//     selectedStep: number | null;\r\n//     setSelectedStep: Dispatch<SetStateAction<number | null>>;\r\n// }\r\n\r\n// export default function ManageEventsModal({\r\n//     show,\r\n//     onClose,\r\n//     events,\r\n//     setEvents,\r\n//     selectedStep,\r\n//     setSelectedStep\r\n// }: Props) {\r\n//     const [tempEvents, setTempEvents] = useState(events);\r\n//     const [draggedEventId, setDraggedEventId] = useState<number | null>(null);\r\n\r\n//     useEffect(() => {\r\n//         if (show) setTempEvents(events);\r\n//     }, [show, events]);\r\n\r\n//     if (!show) return null;\r\n\r\n//     return (\r\n//         <div className=\"modal d-block\" tabIndex={-1} style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n//             <div className=\"modal-dialog\">\r\n//                 <div className=\"modal-content\">\r\n//                     <div className=\"modal-header\">\r\n//                         <h5 className=\"modal-title\">Manage your timeline</h5>\r\n//                         <button className=\"btn-close\" onClick={onClose}></button>\r\n//                     </div>\r\n//                     <div className=\"modal-body\">\r\n//                         <div className=\"mb-3 d-flex flex-column\">\r\n//                             <div className=\"form-floating\">\r\n//                                 <select className=\"form-select\" value={selectedStep ?? ''} onChange={(e) => setSelectedStep(Number(e.target.value))}>\r\n//                                     <option defaultValue=\"\">Step</option>\r\n//                                     {[0, 1, 2, 3].map(i => (\r\n//                                         <option key={i} value={i}>{i + 1}</option>\r\n//                                     ))}\r\n//                                 </select>\r\n//                                 <label>Select the step to modify</label>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"mb-3 d-flex flex-column\">\r\n//                             {selectedStep !== null && tempEvents\r\n//                                 .filter(e => e.step_id === selectedStep)\r\n//                                 .sort((a, b) => a.position - b.position)\r\n//                                 .map(event => (\r\n//                                     <div\r\n//                                         key={event.id}\r\n//                                         className=\"border rounded p-1 my-1 d-flex justify-content-between align-items-center\"\r\n//                                         draggable\r\n//                                         style={{ cursor: \"move\" }}\r\n//                                         onDragStart={() => setDraggedEventId(event.id)}\r\n//                                         onDragOver={e => e.preventDefault()}\r\n//                                         onDrop={() => {\r\n//                                             if (draggedEventId === null || draggedEventId === event.id) return;\r\n\r\n//                                             const draggedIndex = tempEvents.findIndex(e => e.id === draggedEventId);\r\n//                                             const dropIndex = tempEvents.findIndex(e => e.id === event.id);\r\n//                                             const updated = [...tempEvents];\r\n//                                             const [movedItem] = updated.splice(draggedIndex, 1);\r\n//                                             updated.splice(dropIndex, 0, movedItem);\r\n\r\n//                                             const stepEvents = updated.filter(e => e.step_id === selectedStep);\r\n//                                             const otherEvents = updated.filter(e => e.step_id !== selectedStep);\r\n//                                             const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\r\n\r\n//                                             setTempEvents([...otherEvents, ...reordered]);\r\n//                                         }}\r\n//                                     >\r\n//                                         <span>{event.name}</span>\r\n//                                         <button\r\n//                                             className=\"btn btn-danger\"\r\n//                                             onClick={() => {\r\n//                                                 const updated = tempEvents.filter(e => e.id !== event.id);\r\n//                                                 const stepEvents = updated.filter(e => e.step_id === selectedStep);\r\n//                                                 const otherEvents = updated.filter(e => e.step_id !== selectedStep);\r\n//                                                 const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\r\n//                                                 setTempEvents([...otherEvents, ...reordered]);\r\n//                                             }}\r\n//                                         >\r\n//                                             Remove\r\n//                                         </button>\r\n//                                     </div>\r\n//                                 ))}\r\n//                         </div>\r\n//                         {selectedStep !== null && (\r\n//                             <div className=\"mb-1\">\r\n//                                 <button\r\n//                                     className=\"btn btn-success\"\r\n//                                     onClick={() => {\r\n//                                         const stepEvents = tempEvents.filter(e => e.step_id === selectedStep);\r\n//                                         const newEvent = {\r\n//                                             id: -Date.now(),\r\n//                                             name: \"New Event\",\r\n//                                             step_id: selectedStep,\r\n//                                             position: stepEvents.length\r\n//                                         };\r\n//                                         setTempEvents([...tempEvents, newEvent]);\r\n//                                     }}\r\n//                                 >\r\n//                                     Add event\r\n//                                 </button>\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"modal-footer\">\r\n//                         <button\r\n//                             className=\"btn btn-primary\"\r\n//                             onClick={() => {\r\n//                                 setEvents(tempEvents);\r\n//                                 onClose();\r\n//                             }}>\r\n//                             Save\r\n//                         </button>\r\n//                         <button className=\"btn btn-danger\" onClick={onClose}>\r\n//                             Cancel\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\nimport { SetStateAction, Dispatch, useState } from \"react\";\r\nimport modifyEvents from \"../functions/modifyEvents\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\ninterface Event {\r\n    id: number;\r\n    name: string;\r\n    step_id: number;\r\n    position: number;\r\n}\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    onClose: () => void;\r\n    events: Event[];\r\n    setEvents: Dispatch<SetStateAction<Event[]>>;\r\n}\r\n\r\nexport default function ManageTimelineModal({ show, onClose, events, setEvents }: Props) {\r\n    const [activeTab, setActiveTab] = useState<\"events\" | \"connections\">(\"events\");\r\n    const [selectedStep, setSelectedStep] = useState<number>(-1);\r\n    const [tempEvents, setTempEvents] = useState(events);\r\n    const [draggedEventId, setDraggedEventId] = useState<number | null>(null);\r\n    const { accessToken } = useAuth();\r\n\r\n    if (!show) return null;\r\n\r\n    interface EventChanges {\r\n        added: Event[];\r\n        modified: Event[];\r\n        removed: Event[];\r\n    }\r\n\r\n    function checkForEventMods(original: Event[], updated: Event[]): EventChanges {\r\n        const originalMap = new Map(original.map(e => [e.id, e]));\r\n        const updatedMap = new Map(updated.map(e => [e.id, e]));\r\n\r\n        const added: Event[] = [];\r\n        const modified: Event[] = [];\r\n        const removed: Event[] = [];\r\n\r\n        // Check added & modified\r\n        for (const updatedEvent of updated) {\r\n            const originalEvent = originalMap.get(updatedEvent.id);\r\n            if (!originalEvent) {\r\n                added.push(updatedEvent); // new event\r\n            } else if (\r\n                updatedEvent.name !== originalEvent.name ||\r\n                updatedEvent.step_id !== originalEvent.step_id ||\r\n                updatedEvent.position !== originalEvent.position\r\n            ) {\r\n                modified.push(updatedEvent); // changed event\r\n            }\r\n        }\r\n\r\n        // Check removed\r\n        for (const originalEvent of original) {\r\n            if (!updatedMap.has(originalEvent.id)) {\r\n                removed.push(originalEvent);\r\n            }\r\n        }\r\n\r\n        return { added, modified, removed };\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal d-block\" tabIndex={-1} style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Manage your timeline</h5>\r\n                        <button className=\"btn-close\" onClick={() => onClose()}></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <ul className=\"nav nav-tabs mb-3\">\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"events\" ? \"active\" : \"\"}`}\r\n                                    onClick={() => setActiveTab(\"events\")}\r\n                                >\r\n                                    Modify Events\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"connections\" ? \"active\" : \"\"}`}\r\n                                    onClick={() => setActiveTab(\"connections\")}\r\n                                >\r\n                                    Modify Connections\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {activeTab === \"events\" && (\r\n                            <>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <select className=\"form-select\" value={selectedStep ?? -1} onChange={(e) => setSelectedStep(Number(e.target.value))}>\r\n                                        <option value=\"-1\">Step</option>\r\n                                        {[0, 1, 2, 3].map(i => (\r\n                                            <option key={i} value={i}>{i + 1}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <label>Select the step to modify</label>\r\n                                </div>\r\n                                {selectedStep !== -1 && (\r\n                                    <div className=\"mb-3 d-flex flex-column\">\r\n                                        {selectedStep !== -1 && tempEvents\r\n                                            .filter(e => e.step_id === selectedStep)\r\n                                            .sort((a, b) => a.position - b.position)\r\n                                            .map(event => (\r\n                                                <div\r\n                                                    key={event.id}\r\n                                                    className=\"border rounded p-1 my-1 d-flex justify-content-between align-items-center\"\r\n                                                    draggable\r\n                                                    style={{ cursor: \"move\" }}\r\n                                                    onDragStart={() => setDraggedEventId(event.id)}\r\n                                                    onDragOver={e => e.preventDefault()}\r\n                                                    onDrop={() => {\r\n                                                        if (draggedEventId === null || draggedEventId === event.id) return;\r\n\r\n                                                        const draggedIndex = tempEvents.findIndex(e => e.id === draggedEventId);\r\n                                                        const dropIndex = tempEvents.findIndex(e => e.id === event.id);\r\n                                                        const updated = [...tempEvents];\r\n                                                        const [movedItem] = updated.splice(draggedIndex, 1);\r\n                                                        updated.splice(dropIndex, 0, movedItem);\r\n\r\n                                                        const stepEvents = updated.filter(e => e.step_id === selectedStep);\r\n                                                        const otherEvents = updated.filter(e => e.step_id !== selectedStep);\r\n                                                        const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\r\n\r\n                                                        setTempEvents([...otherEvents, ...reordered]);\r\n                                                    }}\r\n                                                >\r\n                                                    {event.name}\r\n                                                    <button\r\n                                                        className=\"btn btn-danger\"\r\n                                                        onClick={() => {\r\n                                                            const updated = tempEvents.filter(e => e.id !== event.id);\r\n                                                            const stepEvents = updated.filter(e => e.step_id === selectedStep);\r\n                                                            const otherEvents = updated.filter(e => e.step_id !== selectedStep);\r\n                                                            const reordered = stepEvents.map((e, i) => ({ ...e, position: i }));\r\n                                                            setTempEvents([...otherEvents, ...reordered]);\r\n                                                        }}>\r\n                                                        Remove\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"mb-1\">\r\n                                    {selectedStep !== -1 && (\r\n                                        <button className=\"btn btn-success\" onClick={() => {\r\n                                            if (selectedStep == null) return;\r\n\r\n                                            const stepEvents = tempEvents.filter(e => e.step_id === selectedStep);\r\n                                            const newEvent = {\r\n                                                id: -Date.now(),\r\n                                                name: \"New Event\",\r\n                                                step_id: selectedStep,\r\n                                                position: stepEvents.length\r\n                                            };\r\n                                            setTempEvents([...tempEvents, newEvent]);\r\n                                        }}>\r\n                                            Add Event\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        {activeTab === \"connections\" && (\r\n                            <div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            className=\"btn btn-primary\" onClick={() => {\r\n                                const { added, modified, removed } = checkForEventMods(events, tempEvents);\r\n                                modifyEvents(accessToken, added, modified, removed);\r\n\r\n                                setEvents(tempEvents);\r\n                                onClose()\r\n                            }}>\r\n                            Save\r\n                        </button>\r\n                        <button className=\"btn btn-danger\" onClick={() => onClose()}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}