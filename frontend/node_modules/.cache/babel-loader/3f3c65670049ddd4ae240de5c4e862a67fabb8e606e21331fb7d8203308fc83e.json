{"ast":null,"code":"var _jsxFileName = \"X:\\\\Other\\\\Coding\\\\React\\\\database-app\\\\frontend\\\\src\\\\layout\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuth } from \"../context/AuthContext\";\nimport './main.css';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport getTimelineData from '../functions/getTimelineData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [showManageTimeLine, setShowManageTimeline] = useState(false);\n  const {\n    isLoggedIn,\n    accessToken\n  } = useAuth();\n  const [selectedStep, setSelectedStep] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [eventsPos, setEventsPos] = useState({});\n  const [tempEvents, setTempEvents] = useState(events);\n  const [highlightedEventChain, setHighlightedEventChain] = useState(new Set());\n  function getConnectedEventChain(startId, visited = new Set()) {\n    if (visited.has(startId)) return visited;\n    visited.add(startId);\n    const directlyConnected = connections.filter(conn => conn.from_event_id === startId).map(conn => conn.to_event_id);\n    directlyConnected.forEach(id => getConnectedEventChain(id, visited));\n    return visited;\n  }\n  function calculatePositions() {\n    const eventsElements = document.querySelectorAll(\".timeline .event\");\n    const positions = {};\n    eventsElements.forEach((event, i) => {\n      const rect = event.getBoundingClientRect();\n      const eventIdAttr = event.getAttribute(\"data-id\");\n      if (!eventIdAttr) return;\n      const eventId = parseInt(eventIdAttr);\n      positions[eventId] = {\n        leftMiddle: {\n          x: rect.left,\n          y: (rect.top + rect.bottom) / 2\n        },\n        rightMiddle: {\n          x: rect.right,\n          y: (rect.top + rect.bottom) / 2\n        }\n      };\n    });\n    setEventsPos(positions);\n    return () => positions;\n  }\n  useEffect(() => {\n    const fetchTimelineData = async () => {\n      if (!accessToken) return;\n      const result = await getTimelineData(accessToken);\n      if (result) {\n        setEvents(result.events);\n        setConnections(result.connections);\n      }\n    };\n    fetchTimelineData();\n  }, [accessToken]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", calculatePositions);\n    return () => {\n      window.removeEventListener(\"resize\", calculatePositions);\n    };\n  }, []);\n  useEffect(() => {\n    calculatePositions();\n  }, [events]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connection-lines\",\n      children: [\n      // Static connections\n      ...connections.filter(conn => !highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\n        var _fromEvent$step_id, _toEvent$step_id;\n        const from = eventsPos[conn.from_event_id];\n        const to = eventsPos[conn.to_event_id];\n        if (!from || !to) return null;\n        const fromEvent = events.find(e => e.id === conn.from_event_id);\n        const toEvent = events.find(e => e.id === conn.to_event_id);\n        const fromStep = (_fromEvent$step_id = fromEvent === null || fromEvent === void 0 ? void 0 : fromEvent.step_id) !== null && _fromEvent$step_id !== void 0 ? _fromEvent$step_id : 0;\n        const toStep = (_toEvent$step_id = toEvent === null || toEvent === void 0 ? void 0 : toEvent.step_id) !== null && _toEvent$step_id !== void 0 ? _toEvent$step_id : 0;\n        const stepDiff = toStep - fromStep;\n        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\n        const d = stepDiff === 1 ? `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${midX} ${from.rightMiddle.y}\n                            L ${midX} ${to.leftMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          ` : `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          `;\n        return /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, `static-${conn.from_event_id}-${conn.to_event_id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this);\n      }),\n      // Animated connections\n      ...connections.filter(conn => highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\n        var _fromEvent$step_id2, _toEvent$step_id2;\n        const from = eventsPos[conn.from_event_id];\n        const to = eventsPos[conn.to_event_id];\n        if (!from || !to) return null;\n        const fromEvent = events.find(e => e.id === conn.from_event_id);\n        const toEvent = events.find(e => e.id === conn.to_event_id);\n        const fromStep = (_fromEvent$step_id2 = fromEvent === null || fromEvent === void 0 ? void 0 : fromEvent.step_id) !== null && _fromEvent$step_id2 !== void 0 ? _fromEvent$step_id2 : 0;\n        const toStep = (_toEvent$step_id2 = toEvent === null || toEvent === void 0 ? void 0 : toEvent.step_id) !== null && _toEvent$step_id2 !== void 0 ? _toEvent$step_id2 : 0;\n        const stepDiff = toStep - fromStep;\n        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\n        const d = stepDiff === 1 ? `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${midX} ${from.rightMiddle.y}\n                            L ${midX} ${to.leftMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          ` : `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          `;\n        return /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d,\n          className: \"path-animated\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, `animated-${conn.from_event_id}-${conn.to_event_id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 p-1\",\n          children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => {\n              setShowManageTimeline(true);\n              setTempEvents(events);\n            },\n            children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), \" Manage timeline\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 p-1\",\n          children: isLoggedIn && events && connections && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline\",\n            children: [0, 1, 2, 3].map((step, stepIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step\",\n              children: events.filter(e => e.step_id === stepIndex).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n                \"data-id\": event.id,\n                className: \"event\",\n                onClick: () => {\n                  const chain = getConnectedEventChain(event.id);\n                  setHighlightedEventChain(prev => prev.has(event.id) ? new Set() : chain);\n                },\n                children: event.name\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 45\n              }, this))\n            }, stepIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), showManageTimeLine && /*#__PURE__*/_jsxDEV(ManageTimeLineModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"n8RSsX+K4HIiBjL02uQHyZhhN7Q=\", false, function () {\n  return [useAuth];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","useAuth","SettingsIcon","getTimelineData","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","showManageTimeLine","setShowManageTimeline","isLoggedIn","accessToken","selectedStep","setSelectedStep","events","setEvents","connections","setConnections","eventsPos","setEventsPos","tempEvents","setTempEvents","highlightedEventChain","setHighlightedEventChain","Set","getConnectedEventChain","startId","visited","has","add","directlyConnected","filter","conn","from_event_id","map","to_event_id","forEach","id","calculatePositions","eventsElements","document","querySelectorAll","positions","event","i","rect","getBoundingClientRect","eventIdAttr","getAttribute","eventId","parseInt","leftMiddle","x","left","y","top","bottom","rightMiddle","right","fetchTimelineData","result","window","addEventListener","removeEventListener","children","className","_fromEvent$step_id","_toEvent$step_id","from","to","fromEvent","find","e","toEvent","fromStep","step_id","toStep","stepDiff","midX","d","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","_fromEvent$step_id2","_toEvent$step_id2","onClick","step","stepIndex","chain","prev","name","ManageTimeLineModal","_c","$RefreshReg$"],"sources":["X:/Other/Coding/React/database-app/frontend/src/layout/Main.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport './main.css';\r\nimport ManageTimelineModal from '../components/ManageTimelineModal'\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport getTimelineData from '../functions/getTimelineData';\r\n\r\ninterface Event {\r\n    id: number,         // Unique globally\r\n    name: string,\r\n    step_id: number,      // Which step it belongs to\r\n    position: number\r\n}\r\n\r\ninterface Connection {\r\n    from_event_id: number,       // Event ID from\r\n    to_event_id: number          // Event ID to\r\n}\r\n\r\nexport default function Main() {\r\n    const [showManageTimeLine, setShowManageTimeline] = useState(false);\r\n    const { isLoggedIn, accessToken } = useAuth();\r\n\r\n    const [selectedStep, setSelectedStep] = useState<number | null>(null);\r\n    const [events, setEvents] = useState<Event[]>([]);\r\n    const [connections, setConnections] = useState<Connection[]>([]);\r\n    const [eventsPos, setEventsPos] = useState<Record<number, {\r\n        leftMiddle: {\r\n            x: number,\r\n            y: number\r\n        },\r\n        rightMiddle: {\r\n            x: number,\r\n            y: number\r\n        }\r\n    }>>({});\r\n\r\n    const [tempEvents, setTempEvents] = useState(events);\r\n    const [highlightedEventChain, setHighlightedEventChain] = useState<Set<number>>(new Set());\r\n\r\n    function getConnectedEventChain(startId: number, visited = new Set<number>()): Set<number> {\r\n        if (visited.has(startId)) return visited;\r\n\r\n        visited.add(startId);\r\n\r\n        const directlyConnected = connections\r\n            .filter(conn => conn.from_event_id === startId)\r\n            .map(conn => conn.to_event_id);\r\n\r\n        directlyConnected.forEach(id => getConnectedEventChain(id, visited));\r\n\r\n        return visited;\r\n    }\r\n\r\n    function calculatePositions() {\r\n        const eventsElements = document.querySelectorAll(\".timeline .event\");\r\n\r\n        const positions: Record<number, { leftMiddle: { x: number; y: number }, rightMiddle: { x: number; y: number } }> = {};\r\n\r\n        eventsElements.forEach((event, i) => {\r\n            const rect = event.getBoundingClientRect();\r\n            const eventIdAttr = event.getAttribute(\"data-id\");\r\n            if (!eventIdAttr) return;\r\n\r\n            const eventId = parseInt(eventIdAttr);\r\n\r\n            positions[eventId] = {\r\n                leftMiddle: {\r\n                    x: rect.left,\r\n                    y: (rect.top + rect.bottom) / 2\r\n                },\r\n                rightMiddle: {\r\n                    x: rect.right,\r\n                    y: (rect.top + rect.bottom) / 2\r\n                }\r\n            };\r\n        });\r\n\r\n        setEventsPos(positions);\r\n\r\n        return () => positions\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchTimelineData = async () => {\r\n            if (!accessToken) return;\r\n\r\n            const result = await getTimelineData(accessToken);\r\n\r\n            if (result) {\r\n                setEvents(result.events);\r\n                setConnections(result.connections);\r\n            }\r\n        };\r\n\r\n        fetchTimelineData();\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", calculatePositions);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", calculatePositions)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        calculatePositions();\r\n    }, [events]);\r\n\r\n    return (\r\n        <>\r\n            <svg className=\"connection-lines\">\r\n                {[\r\n                    // Static connections\r\n                    ...connections.filter(conn => !highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\r\n                        const from = eventsPos[conn.from_event_id];\r\n                        const to = eventsPos[conn.to_event_id];\r\n                        if (!from || !to) return null;\r\n\r\n                        const fromEvent = events.find(e => e.id === conn.from_event_id);\r\n                        const toEvent = events.find(e => e.id === conn.to_event_id);\r\n                        const fromStep = fromEvent?.step_id ?? 0;\r\n                        const toStep = toEvent?.step_id ?? 0;\r\n                        const stepDiff = toStep - fromStep;\r\n\r\n                        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\r\n\r\n                        const d = stepDiff === 1\r\n                            ? `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${midX} ${from.rightMiddle.y}\r\n                            L ${midX} ${to.leftMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `\r\n                            : `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `;\r\n\r\n                        return (\r\n                            <path\r\n                                key={`static-${conn.from_event_id}-${conn.to_event_id}`}\r\n                                d={d}\r\n                                stroke=\"black\"\r\n                                strokeWidth=\"2\"\r\n                                fill=\"none\"\r\n                            />\r\n                        );\r\n                    }),\r\n\r\n                    // Animated connections\r\n                    ...connections.filter(conn => highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\r\n                        const from = eventsPos[conn.from_event_id];\r\n                        const to = eventsPos[conn.to_event_id];\r\n                        if (!from || !to) return null;\r\n\r\n                        const fromEvent = events.find(e => e.id === conn.from_event_id);\r\n                        const toEvent = events.find(e => e.id === conn.to_event_id);\r\n                        const fromStep = fromEvent?.step_id ?? 0;\r\n                        const toStep = toEvent?.step_id ?? 0;\r\n                        const stepDiff = toStep - fromStep;\r\n\r\n                        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\r\n\r\n                        const d = stepDiff === 1\r\n                            ? `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${midX} ${from.rightMiddle.y}\r\n                            L ${midX} ${to.leftMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `\r\n                            : `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `;\r\n\r\n                        return (\r\n                            <path\r\n                                key={`animated-${conn.from_event_id}-${conn.to_event_id}`}\r\n                                d={d}\r\n                                className=\"path-animated\"\r\n                                strokeWidth=\"2\"\r\n                                fill=\"none\"\r\n                            />\r\n                        );\r\n                    })\r\n                ]}\r\n            </svg>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 p-1\">\r\n                        {isLoggedIn && (\r\n                            <button className=\"btn btn-primary\" onClick={() => {\r\n                                setShowManageTimeline(true);\r\n                                setTempEvents(events);\r\n                            }}>\r\n                                <SettingsIcon /> Manage timeline\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 p-1\">\r\n                        {isLoggedIn && events && connections && (\r\n                            <div className=\"timeline\">\r\n                                {[0, 1, 2, 3].map((step, stepIndex) => (\r\n                                    <div key={stepIndex} className=\"step\">\r\n                                        {events.filter(e => e.step_id === stepIndex).map(event => (\r\n                                            <div\r\n                                                key={event.id}\r\n                                                data-id={event.id}\r\n                                                className=\"event\"\r\n                                                onClick={() => {\r\n                                                    const chain = getConnectedEventChain(event.id);\r\n                                                    setHighlightedEventChain(prev => (\r\n                                                        prev.has(event.id) ? new Set() : chain\r\n                                                    ));\r\n                                                }}\r\n                                            >\r\n                                                {event.name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {showManageTimeLine && (\r\n                <ManageTimeLineModal />\r\n            )}\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}