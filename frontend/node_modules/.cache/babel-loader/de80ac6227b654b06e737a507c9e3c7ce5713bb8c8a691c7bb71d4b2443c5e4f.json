{"ast":null,"code":"var _jsxFileName = \"X:\\\\Other\\\\Coding\\\\React\\\\database-app\\\\frontend\\\\src\\\\layout\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuth } from \"../context/AuthContext\";\nimport './main.css';\nimport ManageTimelineModal from '../components/ManageTimelineModal';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport getTimelineData from '../functions/getTimelineData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [showManageTimeLine, setShowManageTimeline] = useState(false);\n  const {\n    isLoggedIn,\n    accessToken\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [eventsPos, setEventsPos] = useState({});\n  const [tempEvents, setTempEvents] = useState(events);\n  const [highlightedEventChain, setHighlightedEventChain] = useState(new Set());\n  function getConnectedEventChain(startId, visited = new Set()) {\n    if (visited.has(startId)) return visited;\n    visited.add(startId);\n    const directlyConnected = connections.filter(conn => conn.from_event_id === startId).map(conn => conn.to_event_id);\n    directlyConnected.forEach(id => getConnectedEventChain(id, visited));\n    return visited;\n  }\n  function calculatePositions() {\n    const eventsElements = document.querySelectorAll(\".timeline .event\");\n    const positions = {};\n    eventsElements.forEach(event => {\n      const rect = event.getBoundingClientRect();\n      const eventIdAttr = event.getAttribute(\"data-id\");\n      if (!eventIdAttr) return;\n      const eventId = parseInt(eventIdAttr);\n      positions[eventId] = {\n        leftMiddle: {\n          x: rect.left + window.scrollX,\n          y: (rect.top + rect.bottom) / 2 + window.scrollY\n        },\n        rightMiddle: {\n          x: rect.right + window.scrollX,\n          y: (rect.top + rect.bottom) / 2 + window.scrollY\n        }\n      };\n    });\n    setEventsPos(positions);\n    return () => positions;\n  }\n  useEffect(() => {\n    const fetchTimelineData = async () => {\n      if (!accessToken) return;\n      const result = await getTimelineData(accessToken);\n      if (result) {\n        setEvents(result.events);\n        setConnections(result.connections);\n      }\n    };\n    fetchTimelineData();\n  }, [accessToken]);\n  useEffect(() => {\n    let timeout;\n    const handleResize = () => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        calculatePositions();\n      }, 100); // wait until resize is done\n    };\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"scroll\", calculatePositions); // still needed for scroll\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"scroll\", calculatePositions);\n    };\n  }, []);\n  useEffect(() => {\n    calculatePositions();\n  }, [events]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connection-lines\",\n      children: [\n      // Static connections\n      ...connections.filter(conn => !highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\n        var _fromEvent$step_id, _toEvent$step_id;\n        const from = eventsPos[conn.from_event_id];\n        const to = eventsPos[conn.to_event_id];\n        if (!from || !to) return null;\n        const fromEvent = events.find(e => e.id === conn.from_event_id);\n        const toEvent = events.find(e => e.id === conn.to_event_id);\n        const fromStep = (_fromEvent$step_id = fromEvent === null || fromEvent === void 0 ? void 0 : fromEvent.step_id) !== null && _fromEvent$step_id !== void 0 ? _fromEvent$step_id : 0;\n        const toStep = (_toEvent$step_id = toEvent === null || toEvent === void 0 ? void 0 : toEvent.step_id) !== null && _toEvent$step_id !== void 0 ? _toEvent$step_id : 0;\n        const stepDiff = toStep - fromStep;\n        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\n        const d = stepDiff === 1 ? `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${midX} ${from.rightMiddle.y}\n                            L ${midX} ${to.leftMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          ` : `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          `;\n        return /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, `static-${conn.from_event_id}-${conn.to_event_id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this);\n      }),\n      // Animated connections\n      ...connections.filter(conn => highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\n        var _fromEvent$step_id2, _toEvent$step_id2;\n        const from = eventsPos[conn.from_event_id];\n        const to = eventsPos[conn.to_event_id];\n        if (!from || !to) return null;\n        const fromEvent = events.find(e => e.id === conn.from_event_id);\n        const toEvent = events.find(e => e.id === conn.to_event_id);\n        const fromStep = (_fromEvent$step_id2 = fromEvent === null || fromEvent === void 0 ? void 0 : fromEvent.step_id) !== null && _fromEvent$step_id2 !== void 0 ? _fromEvent$step_id2 : 0;\n        const toStep = (_toEvent$step_id2 = toEvent === null || toEvent === void 0 ? void 0 : toEvent.step_id) !== null && _toEvent$step_id2 !== void 0 ? _toEvent$step_id2 : 0;\n        const stepDiff = toStep - fromStep;\n        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\n        const d = stepDiff === 1 ? `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${midX} ${from.rightMiddle.y}\n                            L ${midX} ${to.leftMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          ` : `\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\n                          `;\n        return /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d,\n          className: \"path-animated\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, `animated-${conn.from_event_id}-${conn.to_event_id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 p-1\",\n          children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => {\n              setShowManageTimeline(true);\n              setTempEvents(events);\n            },\n            children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), \" Manage timeline\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 p-1\",\n          children: isLoggedIn && events && connections && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline\",\n            children: [0, 1, 2, 3].map((step, stepIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step\",\n              children: events.filter(e => e.step_id === stepIndex).sort((a, b) => a.position - b.position).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n                \"data-id\": event.id,\n                className: \"event\",\n                onClick: () => {\n                  const chain = getConnectedEventChain(event.id);\n                  setHighlightedEventChain(prev => prev.has(event.id) ? new Set() : chain);\n                },\n                children: event.name\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 45\n              }, this))\n            }, stepIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), showManageTimeLine && /*#__PURE__*/_jsxDEV(ManageTimelineModal, {\n      show: showManageTimeLine,\n      onClose: () => setShowManageTimeline(false),\n      events: events,\n      setEvents: setEvents,\n      connections: connections,\n      setConnections: setConnections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"7cT86eoNmvh93e8C11z2jmsQV3Y=\", false, function () {\n  return [useAuth];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","useAuth","ManageTimelineModal","SettingsIcon","getTimelineData","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","showManageTimeLine","setShowManageTimeline","isLoggedIn","accessToken","events","setEvents","connections","setConnections","eventsPos","setEventsPos","tempEvents","setTempEvents","highlightedEventChain","setHighlightedEventChain","Set","getConnectedEventChain","startId","visited","has","add","directlyConnected","filter","conn","from_event_id","map","to_event_id","forEach","id","calculatePositions","eventsElements","document","querySelectorAll","positions","event","rect","getBoundingClientRect","eventIdAttr","getAttribute","eventId","parseInt","leftMiddle","x","left","window","scrollX","y","top","bottom","scrollY","rightMiddle","right","fetchTimelineData","result","timeout","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","children","className","i","_fromEvent$step_id","_toEvent$step_id","from","to","fromEvent","find","e","toEvent","fromStep","step_id","toStep","stepDiff","midX","d","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","_fromEvent$step_id2","_toEvent$step_id2","onClick","step","stepIndex","sort","a","b","position","chain","prev","name","show","onClose","_c","$RefreshReg$"],"sources":["X:/Other/Coding/React/database-app/frontend/src/layout/Main.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport './main.css';\r\nimport ManageTimelineModal from '../components/ManageTimelineModal';\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport getTimelineData from '../functions/getTimelineData';\r\n\r\ninterface Event {\r\n    id: number,         // Unique globally\r\n    name: string,\r\n    step_id: number,      // Which step it belongs to\r\n    position: number\r\n}\r\n\r\ninterface Connection {\r\n    from_event_id: number,       // Event ID from\r\n    to_event_id: number          // Event ID to\r\n}\r\n\r\nexport default function Main() {\r\n    const [showManageTimeLine, setShowManageTimeline] = useState(false);\r\n    const { isLoggedIn, accessToken } = useAuth();\r\n\r\n    const [events, setEvents] = useState<Event[]>([]);\r\n    const [connections, setConnections] = useState<Connection[]>([]);\r\n    const [eventsPos, setEventsPos] = useState<Record<number, {\r\n        leftMiddle: {\r\n            x: number,\r\n            y: number\r\n        },\r\n        rightMiddle: {\r\n            x: number,\r\n            y: number\r\n        }\r\n    }>>({});\r\n\r\n    const [tempEvents, setTempEvents] = useState(events);\r\n    const [highlightedEventChain, setHighlightedEventChain] = useState<Set<number>>(new Set());\r\n\r\n    function getConnectedEventChain(startId: number, visited = new Set<number>()): Set<number> {\r\n        if (visited.has(startId)) return visited;\r\n\r\n        visited.add(startId);\r\n\r\n        const directlyConnected = connections\r\n            .filter(conn => conn.from_event_id === startId)\r\n            .map(conn => conn.to_event_id);\r\n\r\n        directlyConnected.forEach(id => getConnectedEventChain(id, visited));\r\n\r\n        return visited;\r\n    }\r\n\r\n    function calculatePositions() {\r\n        const eventsElements = document.querySelectorAll(\".timeline .event\");\r\n\r\n        const positions: Record<number, { leftMiddle: { x: number; y: number }, rightMiddle: { x: number; y: number } }> = {};\r\n\r\n        eventsElements.forEach((event) => {\r\n            const rect = event.getBoundingClientRect();\r\n            const eventIdAttr = event.getAttribute(\"data-id\");\r\n            if (!eventIdAttr) return;\r\n\r\n            const eventId = parseInt(eventIdAttr);\r\n\r\n            positions[eventId] = {\r\n                leftMiddle: {\r\n                    x: rect.left + window.scrollX,\r\n                    y: (rect.top + rect.bottom) / 2 + window.scrollY\r\n                },\r\n                rightMiddle: {\r\n                    x: rect.right + window.scrollX,\r\n                    y: (rect.top + rect.bottom) / 2 + window.scrollY\r\n                }\r\n            };\r\n        });\r\n\r\n        setEventsPos(positions);\r\n        return () => positions;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchTimelineData = async () => {\r\n            if (!accessToken) return;\r\n\r\n            const result = await getTimelineData(accessToken);\r\n\r\n            if (result) {\r\n                setEvents(result.events);\r\n                setConnections(result.connections);\r\n            }\r\n        };\r\n\r\n        fetchTimelineData();\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        let timeout: ReturnType<typeof setTimeout>;\r\n\r\n        const handleResize = () => {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => {\r\n                calculatePositions();\r\n            }, 100); // wait until resize is done\r\n        };\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        window.addEventListener(\"scroll\", calculatePositions); // still needed for scroll\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n            window.removeEventListener(\"scroll\", calculatePositions);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        calculatePositions();\r\n    }, [events]);\r\n\r\n    return (\r\n        <>\r\n            <svg className=\"connection-lines\">\r\n                {[\r\n                    // Static connections\r\n                    ...connections.filter(conn => !highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\r\n                        const from = eventsPos[conn.from_event_id];\r\n                        const to = eventsPos[conn.to_event_id];\r\n                        if (!from || !to) return null;\r\n\r\n                        const fromEvent = events.find(e => e.id === conn.from_event_id);\r\n                        const toEvent = events.find(e => e.id === conn.to_event_id);\r\n                        const fromStep = fromEvent?.step_id ?? 0;\r\n                        const toStep = toEvent?.step_id ?? 0;\r\n                        const stepDiff = toStep - fromStep;\r\n\r\n                        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\r\n\r\n                        const d = stepDiff === 1\r\n                            ? `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${midX} ${from.rightMiddle.y}\r\n                            L ${midX} ${to.leftMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `\r\n                            : `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `;\r\n\r\n                        return (\r\n                            <path\r\n                                key={`static-${conn.from_event_id}-${conn.to_event_id}`}\r\n                                d={d}\r\n                                stroke=\"black\"\r\n                                strokeWidth=\"2\"\r\n                                fill=\"none\"\r\n                            />\r\n                        );\r\n                    }),\r\n\r\n                    // Animated connections\r\n                    ...connections.filter(conn => highlightedEventChain.has(conn.from_event_id)).map((conn, i) => {\r\n                        const from = eventsPos[conn.from_event_id];\r\n                        const to = eventsPos[conn.to_event_id];\r\n                        if (!from || !to) return null;\r\n\r\n                        const fromEvent = events.find(e => e.id === conn.from_event_id);\r\n                        const toEvent = events.find(e => e.id === conn.to_event_id);\r\n                        const fromStep = fromEvent?.step_id ?? 0;\r\n                        const toStep = toEvent?.step_id ?? 0;\r\n                        const stepDiff = toStep - fromStep;\r\n\r\n                        const midX = (from.rightMiddle.x + to.leftMiddle.x) / 2;\r\n\r\n                        const d = stepDiff === 1\r\n                            ? `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${midX} ${from.rightMiddle.y}\r\n                            L ${midX} ${to.leftMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `\r\n                            : `\r\n                            M ${from.rightMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${from.rightMiddle.y}\r\n                            L ${to.leftMiddle.x} ${to.leftMiddle.y}\r\n                          `;\r\n\r\n                        return (\r\n                            <path\r\n                                key={`animated-${conn.from_event_id}-${conn.to_event_id}`}\r\n                                d={d}\r\n                                className=\"path-animated\"\r\n                                strokeWidth=\"2\"\r\n                                fill=\"none\"\r\n                            />\r\n                        );\r\n                    })\r\n                ]}\r\n            </svg>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 p-1\">\r\n                        {isLoggedIn && (\r\n                            <button className=\"btn btn-primary\" onClick={() => {\r\n                                setShowManageTimeline(true);\r\n                                setTempEvents(events);\r\n                            }}>\r\n                                <SettingsIcon /> Manage timeline\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 p-1\">\r\n                        {isLoggedIn && events && connections && (\r\n                            <div className=\"timeline\">\r\n                                {[0, 1, 2, 3].map((step, stepIndex) => (\r\n                                    <div key={stepIndex} className=\"step\">\r\n                                        {events.filter(e => e.step_id === stepIndex).sort((a, b) => a.position - b.position).map(event => (\r\n                                            <div\r\n                                                key={event.id}\r\n                                                data-id={event.id}\r\n                                                className=\"event\"\r\n                                                onClick={() => {\r\n                                                    const chain = getConnectedEventChain(event.id);\r\n                                                    setHighlightedEventChain(prev => (\r\n                                                        prev.has(event.id) ? new Set() : chain\r\n                                                    ));\r\n                                                }}\r\n                                            >\r\n                                                {event.name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {showManageTimeLine && (\r\n                <ManageTimelineModal\r\n                    show={showManageTimeLine}\r\n                    onClose={() => setShowManageTimeline(false)}\r\n                    events={events}\r\n                    setEvents={setEvents}\r\n                    connections={connections}\r\n                    setConnections={setConnections}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}